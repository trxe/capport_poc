transform:

  # Only retain the player _id from my old mongodb
  cs_player_ids_to_nhl_landing_urls:
    task: mapping
    mapping: 
      csid: _id
      url: # template: format the id into the template
        template: "https://api-web.nhle.com/v1/player/%s/landing"
        args: id # always the key from the previous data structure
        # unless it's supposed to be a literal, then parse "`my_literal" 
        # i.e. literals have the backtick in front

  # Get fresh NHL data
  # example: https://api-web.nhle.com/v1/player/8476453/landing
  nhl_player_to_person:
    task: mapping
    mapping:
      id: csid # from the previous step
      first_name: firstName.default # handle subpaths
      last_name: lastName.default # handle subpaths
      full_name: 
        action: concat_space # str concat, default with space
        args: [ firstName.default, lastName.default ] 
      birthdate: birthDate
      birth_city: birthCity.default
      birth_state_province_code: 
        query: "SELECT code FROM state_province_code WHERE name LIKE %s"
        args: birthStateProvince.default
        take: 0 # take the first response of the resulting list only
      birth_state_country_code: birthCountry.default

    # notice there is not player_id here, 
    # the program needs to keep track of the mapping
      
  nhl_player_to_player:
    task: mapping
    mapping:
      person_id: csid # from the previous step
      player_id: playerId
      shoots_catches: shootsCatches
      positions: 
        action: to_list
        args: position

      