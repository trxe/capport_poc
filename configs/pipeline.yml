pipeline:
  trial: # self-contained, in the future we may wanna stack pipelines
    - label: cs_player_ids
      use: __noop # from_config
      args: 
        result: [{'id': 1}, {'id': 2}, {'id': 3}]
    - label: cs_player_ids_df
      use: __noop # into_df
      take_from: 
        data: cs_player_ids
    # - label: store_cs_player_ids
    #   use: postgres
    #   take_from: 
    #     data: cs_player_ids
    #     model_name: <model_name_in_registry>
    - label: grab_other
      pipeline: other

  # each pipeline item is a node
  # bulk_player_data:
  #   - label: cs_player_data
  #     use: mongo_csdb # looks for the mongo_csdb service
  #     args: 
  #       table: players
  #       req_type: match
  #       match: {} # match node

  #   - label: nhl_player_urls
  #     use: cs_player_ids_to_nhl_landing_urls
  #     take_from: [ cs_player_data ]

  #   - label: nhl_players
  #     use: nhl_api # even this must be a "service"
  #     take_from: [ nhl_player_urls ]

  #   - label: cs_person
  #     use: nhl_player_to_person
  #     take_from: [ nhl_players ]

  #   - label: cs_player
  #     use: nhl_player_to_person
  #     take_from: [ nhl_players ]

  #   - label: cs_person_upsert
  #     use: postgres
  #     take_from: [ cs_person ]
  #     args: 
  #       table: Person
  #       req_type: insert
  #       model: person

  #   - label: cs_player_upsert
  #     use: postgres
  #     take_from: [ cs_player ]
  #     args: 
  #       table: Player
  #       req_type: insert
  #       model: player

  # get_game_data:
  #   - label: cs_player_data
  #     use: mongo_csdb # looks for the mongo_csdb service
  #     args: 
  #       table: players
  #       req_type: match
  #       match: {} # match node
